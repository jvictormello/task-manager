services:
  db:
    image: postgres:16-alpine
    container_name: taskmanager_db
    environment:
      POSTGRES_DB: tasks
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    volumes:
      - db_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d tasks"]
      interval: 5s
      timeout: 3s
      retries: 20
    ports:
      - "5432:5432"
    networks: [appnet]

  api:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: taskmanager_api
    volumes:
      - ./backend:/var/www/html
    depends_on:
      db:
        condition: service_healthy
    expose:
      - "9000"
    networks: [appnet]

  web:
    image: nginx:1.27-alpine
    container_name: taskmanager_web
    depends_on:
      - api
    volumes:
      - ./backend:/var/www/html
      - ./backend/nginx/default.conf:/etc/nginx/conf.d/default.conf:ro
    ports:
      - "8000:80"
    networks: [appnet]

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: taskmanager_frontend
    environment:
      - CHOKIDAR_USEPOLLING=true
    volumes:
      - ./frontend:/app
    working_dir: /app
    command: ["npm","run","dev","--","--host","0.0.0.0","--port","3000"]
    ports:
      - "3000:3000"
    networks: [appnet]

volumes:
  db_data:

networks:
  appnet:
    driver: bridge
